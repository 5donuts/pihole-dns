# pihole-dns - Ansible playbooks to configure a recursive PiHole DNS server
# Copyright (C) 2022  Charles German <5donuts@pm.me>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
---
- name: Check for an existing PiHole installation
  block:
    - name: Check if 'pihole' command is available
      ansible.builtin.stat:
        path: /usr/local/bin/pihole
      register: check_for_pihole_cmd

    - name: Mark PiHole as already installed
      ansible.builtin.set_fact:
        pihole_already_installed: yes
        cacheable: yes
      when: check_for_pihole_cmd.stat.exists

- name: Write the PiHole config to /etc/pihole/setupVars.conf
  block:
    - name: Make /etc/pihole if it doesn't exist
      become: yes # need to be 'root'
      ansible.builtin.file:
        path: /etc/pihole
        state: directory
        mode: '0777' # rwxrwxrwx

    - name: Hash the web admin password variable, if set
      delegate_to: localhost
      when: (web_admin_interface.password is defined) and (web_admin_interface.password|length > 0)
      ansible.builtin.shell: |
        echo -n '{{ web_admin_interface.password }}' \
        | sha256sum \
        | awk '{printf "%s",$1 }' \
        | sha256sum \
        | tr -d ' ' \
        | tr -d '-'
      register: hash

    - name: Make PiHole config at /etc/pihole/setupVars.conf
      become: yes
      vars:
        hashed_password: hash.stdout
      ansible.builtin.template:
        src: templates/setupVars.conf.j2
        dest: /etc/pihole/setupVars.conf
        mode: '0644' # rw-r--r--
  when: not pihole_already_installed

- name: Install PiHole
  block:
    - name: Download PiHole installer
      ansible.builtin.get_url:
        url: https://install.pi-hole.net
        dest: "{{ pihole_install_script_path }}"
        mode: '0744' # rwxr--r--

    - name: Run the PiHole install script
      ansible.builtin.shell:
        cmd: "{{ pihole_install_script_path }} --unattended"

    - name: Remove the install script
      ansible.builtin.file:
        path: "{{ pihole_install_script_path }}"
        state: absent
  when: not pihole_already_installed
